Given an array arr of distinct numbers. 
Find the length of the shortest unordered (neither increasing nor decreasing) subarray in the given array. 
If there is no subarray then return 0.

Examples:

Input: arr[] = [7, 9, 10, 8, 11]
Output: 3
Explanation: Shortest unsorted subarray is 9, 10, 8 which is of 3 elements.

Java Code

class Solution {

    public int shortestUnorderedSubarray(int arr[]) {
    int n = arr.length;
 
        int left = 0;
        while (left < n - 1 && arr[left] <= arr[left + 1]) {
            left++;
        }

        if (left == n - 1) {
            return 0;
        }
 
        int right = n - 1;
        while (right > 0 && arr[right] >= arr[right - 1]) {
            right--;
        }

        int min = Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        
        for (int i = left; i <= right; i++) {
            min = Math.min(min, arr[i]);
            max = Math.max(max, arr[i]);
        }

        while (left >= 0 && arr[left] > min) {
            left--;
        }
 
        while (right < n && arr[right] < max) {
            right++;
        }
  
        return right - left - 1;
      
    }
}
