You are given an array arr[], you need to find the top three largest distinct integers present in the array and return an array of size three in descending order.

Note: If there are less than three distinct elements in the array, then return the available distinct numbers in descending order.

Examples:

Input: arr[] = [10, 4, 3, 50, 23, 90, 90]
Output: [90, 50, 23]
Explanation: Since 90 appears two times in the given array, hence it is only counted once. Therefore, the top 3 distinct largest numbers are 90, 50 and 23.

class Solution {
    public int[] getThreeLargest(int arr[]) {
        // code here
        TreeSet<Integer> set = new TreeSet<>(Collections.reverseOrder());
        for (int num : arr) {
            set.add(num); 
        }
        int[] result = new int[Math.min(3, set.size())];
        int index = 0;
        for (int num : set) {
            if (index == 3) break;
            result[index++] = num;
        }
        return result;
    }
}
