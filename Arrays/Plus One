You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. 
The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.

Increment the large integer by one and return the resulting array of digits.

 

Example 1:

Input: digits = [1,2,3]
Output: [1,2,4]
Explanation: The array represents the integer 123.
Incrementing by one gives 123 + 1 = 124.
Thus, the result should be [1,2,4].
Example 2:

Input: digits = [4,3,2,1]
Output: [4,3,2,2]
Explanation: The array represents the integer 4321.
Incrementing by one gives 4321 + 1 = 4322.
Thus, the result should be [4,3,2,2].

1) class Solution {
    public int[] plusOne(int[] digits) {
        StringBuilder sb=new StringBuilder();
        for(int num:digits)
        {
            sb.append(num);
        }
       long sum=Long.parseLong(sb.toString());
       sum=sum+1;
       String str=Long.toString(sum);
       int[] val=new int [str.length()];
       for(int i=0;i<str.length();i++)
       {
        val[i]=str.charAt(i)-'0';
       }
       return val;
    }
}

2)BigInt method
import java.math.BigInteger; // Import BigInteger

class Solution {
    public int[] plusOne(int[] digits) {
        StringBuilder sb = new StringBuilder();
        for (int num : digits) {
            sb.append(num); // Append each digit to the StringBuilder
        }

        // Use BigInteger to handle very large numbers
        BigInteger sum = new BigInteger(sb.toString()); // Convert StringBuilder to BigInteger
        sum = sum.add(BigInteger.ONE); // Add 1 to the BigInteger

        String str = sum.toString(); // Convert the result back to a string
        int[] val = new int[str.length()]; // Create an array to store the result digits

        // Convert each character in the string to an integer
        for (int i = 0; i < str.length(); i++) {
            val[i] = str.charAt(i) - '0';
        }

        return val; // Return the result array
    }
}


