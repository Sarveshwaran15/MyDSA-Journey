Given two arrays, one is an increasing sequence arr1[] and the other is a normal sequence arr2[], find the k-th missing element in the increasing sequence that is not present in the normal sequence. If no k-th missing element exists, return -1.

Examples:

Input: arr1[] = [0, 2, 4, 6, 8, 10, 12, 14, 15], arr2[] = [4, 10, 6, 8, 12], k = 3
Output: 14
Explanation: The missing numbers from arr1 that are not in arr2 are [0, 2, 14, 15]. The 3rd missing number is 14.

class Solution {
    public int findKthMissing(int[] arr1, int[] arr2, int k) {
        // code here
         Set<Integer> set = new HashSet<>();
        for (int num : arr2) {
            set.add(num); 
        }
        List<Integer> missing = new ArrayList<>();
        for (int num : arr1) {
            if (!set.contains(num)) {
                missing.add(num);
            }
        }
        if (missing.size() < k) {
            return -1;
        }
        return missing.get(k - 1);
    }
}
