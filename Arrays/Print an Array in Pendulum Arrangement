Given an array arr[]. Arrange the elements of the array in a way similar to the to-and-fro movement of a Pendulum.

The minimum element out of the list of integers must come in the center position of the array. 
If there are even elements, then the minimum element should be moved to (n-1)/2 index (considering that indexes start from 0)
The next number (next to a minimum) in ascending order, goes to the right,
and the next to the next number goes to the left of the minimum number and continues like a Pendulum.
As higher numbers are reached, one goes to one side in a to-and-fro manner similar to that of a Pendulum.
Examples:

Input: arr[] = [1, 3, 2, 5, 4]
Output: [5, 3, 1, 2, 4]
Explanation:  The minimum element is 1, so it is moved to the middle. 
The next higher element 2 is moved to the right of the middle element while the next higher element 3 is moved to the left of the middle element and this process is continued.

class Solution {
    public int[] pendulumArrangement(int arr[]) {
        // Write your code here
        Arrays.sort(arr);  
        int n = arr.length;
        int[] result = new int[n];
        int center = (n - 1) / 2; 
        int left = center - 1;
        int right = center + 1;
        result[center] = arr[0]; 
        boolean toRight = true;
        for (int i = 1; i < n; i++) {
            if (toRight) {
                result[right++] = arr[i];
            } else {
                result[left--] = arr[i];
            }
            toRight = !toRight; 
        }
        return result;
    }
}
