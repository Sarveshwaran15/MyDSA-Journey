Given a number x and an array of integers arr, find the smallest subarray with sum greater than the given value. If such a subarray do not exist return 0 in that case.

Examples:

Input: x = 51, arr[] = [1, 4, 45, 6, 0, 19]
Output: 3
Explanation: Minimum length subarray is [4, 45, 6]
Input: x = 100, arr[] = [1, 10, 5, 2, 7]
Output: 0
Explanation: No subarray exist

Java Code

class Solution {

    public static int smallestSubWithSum(int x, int[] arr) {
        // Your code goes here
       int minLen = Integer.MAX_VALUE;

        for (int i = 0; i < arr.length; i++) {
            int sum = 0;
            int count = 0;

            for (int j = i; j < arr.length; j++) {
                sum += arr[j];
                count++;

                if (sum > x) {
                    if (count < minLen) {
                        minLen = count;
                    }
                    break; 
                }
            }
        }

        return (minLen == Integer.MAX_VALUE) ? 0 : minLen;
    
    }
    
}
