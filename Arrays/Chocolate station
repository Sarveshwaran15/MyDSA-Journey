Geek has an array arr, where arr[i] (1-based indexing) denotes the number of chocolates corresponding to each station. When he moves from station i to station i+1 he gets arr[i] - arr[i+1] chocolates for free, if this number is negative, he loses that many chocolates also.
He can only move from station i to station i+1 if he has a non-negative number of chocolates with him.
Given the cost of one chocolate Rs. price. Find the minimum cost incurred in reaching the last station from the first station (station 1).
Note: Initially Geek has 0 chocolates.

Examples:

Input: arr[] = [1, 2, 3], price = 10
Output:  30
Explanation: 
To reach the first station from the starting point, we need to buy 1 chocolate,To reach station 2 form station 1, we get arr[1] - arr[2] = -1 chocolates i.e. we lose 1 chocolate. 
Hence, we need to buy 1 chocolate.Similarly, we need to buy 1 chocolate to reach station 3 from station 2.
Hence, total cost incurred = (1+1+1)*10 = 30

class Solution {
    public long getChocolateCost(int[] arr, int price) {
        // code here
        Arrays.sort(arr);
        return (long)(price*arr[arr.length-1]);
    }
}
