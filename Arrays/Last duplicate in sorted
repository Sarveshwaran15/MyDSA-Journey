You are given a sorted array arr[] that may contain duplicate elements.
Your task is to find the index of the last occurrence of any duplicate element and return the index along with the value of that element. If no duplicate element is found, return [-1, -1].

Examples :

Input : arr[] = [1, 5, 5, 6, 6, 7]
Output : [4, 6]
Explanation: Last duplicate element is 6 having index 4.
Input : arr[] = [1, 2, 3, 4, 5]
Output: [-1, -1]
Explanation: No duplicate elements are present in the array.

Java Code

class Solution {
    public int[] dupLastIndex(int[] arr) {
        if (arr == null || arr.length == 0) {
            return new int[]{-1, -1}; // Handle edge case
        }

        int lastDuplicateValue = -1;
        int lastDuplicateIndex = -1;

        // Use a HashMap to store the last index of each value
        java.util.Map<Integer, Integer> map = new java.util.HashMap<>();

        for (int i = 0; i < arr.length; i++) {
            if (map.containsKey(arr[i])) {
                lastDuplicateValue = arr[i];
                lastDuplicateIndex = i;
            } else {
                map.put(arr[i], i);
            }
        }

        return new int[]{lastDuplicateIndex, lastDuplicateValue};
    }
}
