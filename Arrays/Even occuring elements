Given an array arr[] of integers, where most numbers occur an odd number of times, 
except for a few elements that appear an even number of times. Find and return the elements with even occurrences in the array.
If no such element exists, return -1.
Note: Elements should be returned in order of occurrence.

Examples:

Input: arr[] = [9, 12, 23, 10, 12, 12, 15, 23, 14, 12, 15]
Output: [12, 15, 23]
Explanation: The numbers 12, 15, and 23 each appear an even number of times.

Java Code

class Solution {
    public List<Integer> findEvenOccurrences(int[] arr) {
        // code here
      HashMap<Integer, Integer> freqMap = new HashMap<>();
        List<Integer> result = new ArrayList<>();
        for (int num : arr) {
            freqMap.put(num, freqMap.getOrDefault(num, 0) + 1);
        }
        for (int num : arr) {
            if (freqMap.get(num) % 2 == 0 && !result.contains(num)) {
                result.add(num);
            }
        }
        if (result.isEmpty()) {
            result.add(-1);
        }

        return result;
    
    }
}
