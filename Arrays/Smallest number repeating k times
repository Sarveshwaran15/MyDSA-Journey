Given an array arr, the goal is to find out the smallest number that is repeated exactly ‘k’ times.
Note: If there is no such element then return -1.

Example:

Input: arr[] = [2, 2, 1, 3, 1], k = 2
Output: 1
Explanation: Here in array, 2 is repeated 2 times, 1 is repeated 2 times, 3 is repeated 1 time.
Hence 2 and 1 both are repeated 'k' times i.e 2 and min(2, 1) is 1 .


Java Code

class Solution {
    public int findDuplicate(int[] arr, int k) {
        int count;
        int val = -1;
        ArrayList<Integer> lst = new ArrayList<>();
        HashSet<Integer> checked = new HashSet<>(); 

        for (int i = 0; i < arr.length; i++) {
            if (checked.contains(arr[i])) 
            continue; 

            count = 1; 

            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    count++;
                }
            }

            if (count == k) {
                lst.add(arr[i]);
            }
            checked.add(arr[i]); 
        }

       
        if (!lst.isEmpty()) {
            val = Collections.min(lst);
        }

        return val;
    }
}
