Given a sorted array, arr[] containing only 0s and 1s, find the transition point,
i.e., the first index where 1 was observed, and before that, only 0 was observed. 
If arr does not have any 1, return -1. If array does not have any 0, return 0.

Examples:

Input: arr[] = [0, 0, 0, 1, 1]
Output: 3
Explanation: index 3 is the transition point where 1 begins.

Java Code

class Solution {
    int transitionPoint(int arr[]) {
        // code here
         int left = 0, right = arr.length - 1;
        
        if (arr[0] == 1) return 0;  
        if (arr[right] == 0) return -1;  
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (arr[mid] == 1) {
                if (mid == 0 || arr[mid - 1] == 0) {
                    return mid;
                }
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
    
    }
}
