Given an array arr[] of integers. Find an element such that all the elements to its left are smaller and to its right are greater. Print -1 if no such element exists.

Note:  There can be more than one such element. In that case, print the first such number occurring in the array.

Examples:

Input: arr[] = [4, 3, 2, 5, 8, 6, 7]
Output: 5
Explanation: To the left of element 5 every element is smaller to it and to the right of element 5 every element is greater to it.  

// User function Template for Java

class Solution {
    int FindElement(int[] arr) {
        // Your code goes here
        int n = arr.length;
        int[] minRight = new int[n];
        minRight[n - 1] = Integer.MAX_VALUE;
        for (int i = n - 2; i >= 0; i--) {
            minRight[i] = Math.min(minRight[i + 1], arr[i + 1]);
        }
        int maxLeft = Integer.MIN_VALUE;
        for (int i = 0; i < n; i++) {
            if (maxLeft < arr[i] && arr[i] < minRight[i]) {
                return arr[i];
            }
            maxLeft = Math.max(maxLeft, arr[i]);
        }
        return -1;
    }
}
