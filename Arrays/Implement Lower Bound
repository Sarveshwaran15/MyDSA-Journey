Given a sorted array arr[] and a number target, the task is to find the lower bound of the target in this given array. 
The lower bound of a number is defined as the smallest index in the sorted array where the element is greater than or equal to the given number.

Note: If all the elements in the given array are smaller than the target, the lower bound will be the length of the array. 

Examples :

Input:  arr[] = [2, 3, 7, 10, 11, 11, 25], target = 9
Output: 3
Explanation: 3 is the smallest index in arr[] where element (arr[3] = 10) is greater than or equal to 9.

class Solution {
    int lowerBound(int[] arr, int target) {
        // code here
         int left = 0;
        int right = arr.length;
        int answer = arr.length; 
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (arr[mid] >= target) {
                answer = mid;
                right = mid;
            } else {
                left = mid + 1;
            }
        }
        return answer;
    }
}
