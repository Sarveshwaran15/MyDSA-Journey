Given an array arr[] of elements. The task is to calculate the cumulative frequency of each distinct element of the array.

Note: Cumulative frequency should be taken according to the sorted order of elements.

Examples:

Input : arr[] = [1, 2, 2, 1, 3, 4]
Output : [2, 4, 5, 6]
Explanation: The elements are first counted for their frequencies, resulting in {1: 2, 2: 2, 3: 1, 4: 1}. These elements are then sorted by their value, yielding the order [1, 2, 3, 4]. The cumulative frequencies are calculated by adding up the frequencies of the elements as we progress through the sorted order. Thus, the output is [2, 4, 5, 6], representing the cumulative count of elements in the sorted order.

// User function Template for Java

class Solution {

    public int[] countFreq(int arr[]) {

        // complete the function
        int max = 0;
        for (int val : arr) {
            max = Math.max(max, val);
        }
        int[] hash = new int[max + 1];
        for (int val : arr) {
            hash[val]++;
        }
        List<Integer> result = new ArrayList<>();
        int cumulative = 0;
        for (int i = 0; i <= max; i++) {
            if (hash[i] > 0) {
                cumulative += hash[i];
                result.add(cumulative);
            }
        }
        int[] res = new int[result.size()];
        for (int i = 0; i < result.size(); i++) {
            res[i] = result.get(i);
        }
        return res;
    }
}
