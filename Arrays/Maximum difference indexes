Given an array arr[] of integers, find the maximum possible gap. The gap is defined as the difference between the indices of an element's first and last appearance in the array. If an element appears only once, its gap is 0.

Examples:

Input: arr[] = [2, 1, 3, 4, 2, 1, 5, 1, 7]
Output: 6
Explanation: For the array with 0-based indexing, the number 1's first appearance is at index 1 and its last appearance is at index 7. The gap is 7 - 1 = 6, which is the maximum gap in this array.

import java.util.*;

class Solution {
    public int maxGap(List<Integer> arr) {
        // code here
        Map<Integer, Integer> firstIndexMap = new HashMap<>();
        int maxGap = 0;
        for (int i = 0; i < arr.size(); i++) {
            int val = arr.get(i);
            if (!firstIndexMap.containsKey(val)) {
                firstIndexMap.put(val, i); 
            } else {
                int gap = i - firstIndexMap.get(val); 
                maxGap = Math.max(maxGap, gap);       
            }
        }
        return maxGap;
    }
}
